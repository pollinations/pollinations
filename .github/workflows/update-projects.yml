name: Update Projects Data and README

# Prevent concurrent runs of this workflow
concurrency:
  group: update-projects-${{ github.ref }}
  cancel-in-progress: false

on:
  # Trigger on project submission issues
  issues:
    types: [opened, edited]
  
  # Trigger on manual workflow dispatch
  workflow_dispatch:
    inputs:
      force_update:
        description: 'Force update README even if no changes detected'
        required: false
        default: false
        type: boolean
  
  # Trigger on pushes to project files
  push:
    paths:
      - 'pollinations.ai/src/config/projects/**'
      - 'scripts/generateReadme.js'
      - 'scripts/updateStarCounts.js'
      - 'scripts/validateProjectData.js'
      - 'scripts/processProjectSubmission.js'

  # Scheduled update (daily at 12:00 UTC)
  schedule:
    - cron: '0 12 * * *'

jobs:
  update-projects-data:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: write
      issues: write
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          # Ensure we get all files including the projects directory
          clean: false

      - name: Verify repository checkout
        run: |
          echo "Repository checkout verification:"
          echo "Current branch: $(git branch --show-current)"
          echo "Git status:"
          git status --short
          echo "Recent commits:"
          git log --oneline -5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          if [ -f scripts/package.json ]; then
            cd scripts && npm ci
          else
            echo "No package.json found in scripts directory, creating minimal setup..."
            mkdir -p scripts
            cd scripts
            npm init -y
            npm install node-fetch@^3.3.2 || npm install node-fetch@^2.7.0
          fi

      - name: Verify project directory structure
        run: |
          echo "Checking project directory structure..."
          echo "Current working directory: $(pwd)"
          echo "Repository contents:"
          ls -la
          
          if [ -d "pollinations.ai" ]; then
            echo "✅ pollinations.ai directory found"
            ls -la pollinations.ai/
            
            if [ -d "pollinations.ai/src" ]; then
              echo "✅ pollinations.ai/src directory found"
              ls -la pollinations.ai/src/
              
              if [ -d "pollinations.ai/src/config" ]; then
                echo "✅ pollinations.ai/src/config directory found"
                ls -la pollinations.ai/src/config/
                
                if [ -d "pollinations.ai/src/config/projects" ]; then
                  echo "✅ Projects directory found"
                  ls -la pollinations.ai/src/config/projects/
                  echo "Number of .js files: $(find pollinations.ai/src/config/projects/ -name '*.js' | wc -l)"
                else
                  echo "❌ Projects directory not found. Creating directory structure..."
                  mkdir -p pollinations.ai/src/config/projects
                  echo "Directory created."
                fi
              else
                echo "❌ Config directory not found. Creating directory structure..."
                mkdir -p pollinations.ai/src/config/projects
                echo "Directory created."
              fi
            else
              echo "❌ src directory not found. Creating directory structure..."
              mkdir -p pollinations.ai/src/config/projects
              echo "Directory created."
            fi
          else
            echo "❌ pollinations.ai directory not found. This suggests a checkout issue."
            echo "Creating directory structure as fallback..."
            mkdir -p pollinations.ai/src/config/projects
            echo "Directory created."
          fi

      - name: Process project submission (if issue)
        if: github.event_name == 'issues' && contains(github.event.issue.labels.*.name, 'project-submission')
        id: process-submission
        run: |
          if [ -f scripts/processProjectSubmission.js ]; then
            echo "Processing project submission from repository root..."
            GITHUB_ACTIONS=true node scripts/processProjectSubmission.js \
              --issue-number="${{ github.event.issue.number }}" \
              --dry-run=false || echo "Project submission processing completed with warnings"
          else
            echo "Project submission script not found, skipping..."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_BODY: ${{ github.event.issue.body }}

      - name: Update GitHub star counts
        id: update-stars
        run: |
          if [ -f scripts/updateStarCounts.js ]; then
            echo "Running star count update from repository root..."
            if [ -d "pollinations.ai/src/config/projects" ]; then
              echo "Projects directory confirmed to exist before running script"
              GITHUB_ACTIONS=true node scripts/updateStarCounts.js || echo "Star count update completed with warnings"
            else
              echo "⚠️ Projects directory still not found, skipping star count update"
              echo "This may be normal for a new repository or if projects haven't been added yet"
            fi
          else
            echo "Star count script not found, skipping..."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Migrate projects data
        id: migrate-data
        run: |
          if [ -f scripts/migrateProjects.js ]; then
            echo "Running migration script..."
            GITHUB_ACTIONS=true node scripts/migrateProjects.js
            
            # Verify files were created in the correct location
            if [ -f pollinations.ai/src/config/projectsData.json ]; then
              echo "✅ projectsData.json created successfully"
            fi
            if [ -f pollinations.ai/src/config/projectAnalytics.json ]; then
              echo "✅ projectAnalytics.json created successfully"
            fi
          else
            echo "Migration script not found, skipping..."
          fi
          echo "migration-completed=true" >> $GITHUB_OUTPUT

      - name: Generate README
        if: steps.migrate-data.outputs.migration-completed == 'true' || inputs.force_update == true
        id: generate-readme
        run: |
          if [ -f scripts/generateReadme.js ]; then
            echo "Generating README from repository root..."
            GITHUB_ACTIONS=true node scripts/generateReadme.js
            echo "readme-updated=true" >> $GITHUB_OUTPUT
          else
            echo "README generation script not found, skipping..."
            echo "readme-updated=false" >> $GITHUB_OUTPUT
          fi

      - name: Validate generated data
        run: |
          if [ -f scripts/validateProjectData.js ]; then
            echo "Validating project data from repository root..."
            GITHUB_ACTIONS=true node scripts/validateProjectData.js || echo "Validation completed with warnings"
          else
            echo "Validation script not found, skipping..."
          fi

      - name: Check for changes
        id: check-changes
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected:"
            git status --short
          else
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected"
          fi

      - name: Commit and push changes
        if: steps.check-changes.outputs.changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Add changes (only add files that exist)
          git add README.md || echo "README.md not found"
          if [ -f pollinations.ai/src/config/projectsData.json ]; then
            git add pollinations.ai/src/config/projectsData.json
          fi
          if [ -f pollinations.ai/src/config/projectAnalytics.json ]; then
            git add pollinations.ai/src/config/projectAnalytics.json
          fi
          if [ -f .github/ISSUE_TEMPLATE/project-submission.yml ]; then
            git add .github/ISSUE_TEMPLATE/project-submission.yml
          fi
          if [ -d pollinations.ai/src/config/projects ]; then
            git add pollinations.ai/src/config/projects/
          fi
          
          # Determine commit message
          if [ "${{ github.event_name }}" = "issues" ]; then
            COMMIT_MSG="feat: add project from issue #${{ github.event.issue.number }}"
          elif [ "${{ github.event_name }}" = "schedule" ]; then
            COMMIT_MSG="chore: scheduled update of project data and README"
          else
            COMMIT_MSG="chore: update project data and README"
          fi
          
          # Only commit if there are actually staged changes
          if git diff --staged --quiet; then
            echo "No staged changes to commit"
          else
            git commit -m "$COMMIT_MSG" -m "Auto-generated by GitHub Actions"
            git push origin HEAD || (echo "Push failed, attempting retry..." && sleep 5 && git push origin HEAD)
          fi

      - name: Create pull request for major changes
        if: steps.check-changes.outputs.changes == 'true' && github.event_name == 'issues'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "feat: Add project from issue #${{ github.event.issue.number }}"
          body: |
            ## New Project Submission
            
            This PR adds a new project to the Pollinations.AI ecosystem based on issue #${{ github.event.issue.number }}.
            
            ### Changes:
            - ✅ Added project to structured data
            - ✅ Updated README.md with new project
            - ✅ Validated data integrity
            - ✅ Updated analytics
            
            ### Project Details:
            - **Submission Issue**: #${{ github.event.issue.number }}
            - **Auto-generated**: Yes
            - **Validation**: Passed
            
            This PR is ready for review and can be safely merged.
          branch: feat/project-submission-${{ github.event.issue.number }}
          delete-branch: true

      - name: Comment on issue (success)
        if: github.event_name == 'issues' && steps.check-changes.outputs.changes == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `🎉 **Thank you for your project submission!**
              
              Your project has been successfully processed and added to our ecosystem. Here's what happened:
              
              ✅ **Project validated and added to structured data**
              ✅ **README.md updated with your project**
              ✅ **Analytics updated**
              ✅ **Available on the projects discovery page**
              
              🌟 **Your project is now live at**: https://pollinations.ai/projects
              
              Thank you for contributing to the Pollinations.AI community! 🌸`
            });

      - name: Comment on issue (error)
        if: github.event_name == 'issues' && failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `❌ **Submission Processing Failed**
              
              Unfortunately, there was an error processing your project submission. 
              
              **Common issues:**
              - Missing required fields
              - Invalid URLs
              - Duplicate submission
              
              Please check your submission details and try again, or reach out to our team for assistance.
              
              **Need help?** Join our [Discord community](https://discord.gg/k9F7SyTgqn) for support.`
            });

      - name: Generate deployment preview
        if: steps.check-changes.outputs.changes == 'true'
        run: |
          echo "🚀 Projects data updated successfully!"
          echo "📊 View the updated projects at: https://pollinations.ai/projects"
          echo "📈 Analytics dashboard: https://pollinations.ai/projects/analytics"

  deploy-to-production:
    needs: update-projects-data
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.ref == 'refs/heads/master' && needs.update-projects-data.result == 'success'
    
    steps:
      - name: Trigger deployment
        run: |
          echo "🚀 Triggering production deployment..."
          echo "✅ Update projects data job completed successfully"
          # Add your deployment logic here
          # This could be a webhook to your hosting provider
          # or a call to another GitHub Action